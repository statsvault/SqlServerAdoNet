ä
>C:\Projects\SqlServerAdoNet\SqlServerAdoNet\Enums\QueryType.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
public 

enum 
	QueryType 
{ 
Select 
, 
Insert 
, 
Update 
, 
Delete 
}		 
}

 ¯
RC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Exceptions\CommandSettingsException.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
[ 
Serializable 
] 
public 

class $
CommandSettingsException )
:* +
	Exception, 5
{ 
public		 $
CommandSettingsException		 '
(		' (
)		( )
:		* +
base		, 0
(		0 1
)		1 2
{		3 4
}		5 6
public $
CommandSettingsException '
(' (
string( .
message/ 6
)6 7
:8 9
base: >
(> ?
message? F
)F G
{H I
}J K
public $
CommandSettingsException '
(' (
string( .
message/ 6
,6 7
	Exception8 A
innerExceptionB P
)P Q
: 
base 
( 
message 
, 
innerException *
)* +
{, -
}. /
	protected $
CommandSettingsException *
(* +
SerializationInfo+ <
info= A
,A B
StreamingContextC S
contextT [
)[ \
: 
base 
( 
info 
, 
context  
)  !
{" #
}$ %
} 
} ¯
RC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Exceptions\ModelDefinitionException.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
[ 
Serializable 
] 
public 

class $
ModelDefinitionException )
:* +
	Exception, 5
{ 
public		 $
ModelDefinitionException		 '
(		' (
)		( )
:		* +
base		, 0
(		0 1
)		1 2
{		3 4
}		5 6
public $
ModelDefinitionException '
(' (
string( .
message/ 6
)6 7
:8 9
base: >
(> ?
message? F
)F G
{H I
}J K
public $
ModelDefinitionException '
(' (
string( .
message/ 6
,6 7
	Exception8 A
innerExceptionB P
)P Q
: 
base 
( 
message 
, 
innerException *
)* +
{, -
}. /
	protected $
ModelDefinitionException *
(* +
SerializationInfo+ <
info= A
,A B
StreamingContextC S
contextT [
)[ \
: 
base 
( 
info 
, 
context  
)  !
{" #
}$ %
} 
} ⁄
MC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Exceptions\SqlBuilderException.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
[ 
Serializable 
] 
public 

class 
SqlBuilderException $
:% &
	Exception' 0
{ 
public		 
SqlBuilderException		 "
(		" #
)		# $
:		% &
base		' +
(		+ ,
)		, -
{		. /
}		0 1
public 
SqlBuilderException "
(" #
string# )
message* 1
)1 2
:3 4
base5 9
(9 :
message: A
)A B
{C D
}E F
public 
SqlBuilderException "
(" #
string# )
message* 1
,1 2
	Exception3 <
innerException= K
)K L
: 
base 
( 
message 
, 
innerException *
)* +
{, -
}. /
	protected 
SqlBuilderException %
(% &
SerializationInfo& 7
info8 <
,< =
StreamingContext> N
contextO V
)V W
: 
base 
( 
info 
, 
context  
)  !
{" #
}$ %
} 
} É
CC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Helpers\CommonHelper.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
internal 
static 
class 
CommonHelper &
{ 
public 
static 
string 
ReplaceInsensitive /
(/ 0
this0 4
string5 ;
stringToSearch< J
,J K
stringL R
oldValueS [
,[ \
string] c
newValued l
)l m
{ 	
if 
( 
! 
string 
. 
IsNullOrEmpty %
(% &
stringToSearch& 4
)4 5
&&6 8
!9 :
string: @
.@ A
IsNullOrEmptyA N
(N O
oldValueO W
)W X
&&Y [
newValue\ d
!=e g
nullh l
)l m
{ 
return 
Regex 
. 
Replace $
($ %
stringToSearch% 3
,3 4
Regex5 :
.: ;
Escape; A
(A B
oldValueB J
)J K
,K L
newValueM U
.U V
ReplaceV ]
(] ^
$str^ a
,a b
$strc g
)g h
,h i
RegexOptionsj v
.v w

IgnoreCase	w Å
)
Å Ç
;
Ç É
} 
return 
stringToSearch !
;! "
} 	
public&& 
static&& 
string&& 
RemoveFromEnd&& *
(&&* +
this&&+ /
string&&0 6
source&&7 =
,&&= >
string&&? E
value&&F K
)&&K L
{'' 	
if(( 
((( 
!(( 
string(( 
.(( 
IsNullOrEmpty(( %
(((% &
source((& ,
)((, -
&&((. 0
!((1 2
string((2 8
.((8 9
IsNullOrEmpty((9 F
(((F G
value((G L
)((L M
)((M N
{)) 
var** 

comparison** 
=**  
StringComparison**! 1
.**1 2
OrdinalIgnoreCase**2 C
;**C D
return++ 
source++ 
.++ 
EndsWith++ &
(++& '
value++' ,
,++, -

comparison++. 8
)++8 9
?++: ;
source++< B
.++B C
Remove++C I
(++I J
source++J P
.++P Q
LastIndexOf++Q \
(++\ ]
value++] b
,++b c

comparison++d n
)++n o
)++o p
:++q r
source++s y
;++y z
},, 
return-- 
source-- 
;-- 
}.. 	
public55 
static55 
decimal55 
?55 
	ToDecimal55 (
(55( )
this55) -
object55. 4
value555 :
)55: ;
{66 	
if77 
(77 
value77 
!=77 
null77 
&&77  
value88 
!=88 
DBNull88 
.88  
Value88  %
&&88& (
decimal99 
.99 
TryParse99  
(99  !
value99! &
.99& '
ToString99' /
(99/ 0
)990 1
,991 2
out993 6
decimal997 >
dec99? B
)99B C
)99C D
{:: 
return;; 
dec;; 
;;; 
}<< 
return== 
null== 
;== 
}>> 	
}?? 
}@@ ·S
BC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Helpers\ModelHelper.cs
	namespace		 	
	StatKings		
 
.		 
SqlServerAdoNet		 #
{

 
internal 
static 
class 
ModelHelper %
{ 
public 
static 
	TableName 
GetTableName  ,
<, -
T- .
>. /
(/ 0
)0 1
{ 	
var 
type 
= 
typeof 
( 
T 
)  
;  !
var 
name 
= 
type 
. 
GetAttributeValue -
(- .
(. /
TableAttribute/ =
a> ?
)? @
=>A C
aD E
.E F
NameF J
)J K
;K L
var 
schema 
= 
type 
. 
GetAttributeValue /
(/ 0
(0 1
TableAttribute1 ?
a@ A
)A B
=>C E
aF G
.G H
SchemaH N
)N O
;O P
if 
( 
string 
. 
IsNullOrWhiteSpace )
() *
name* .
). /
)/ 0
{ 
name 
= 
type 
. 
Name  
.  !
RemoveFromEnd! .
(. /
$str/ 4
)4 5
;5 6
} 
return   
new   
	TableName    
{  ! "
Name  # '
=  ( )
name  * .
,  . /
Schema  0 6
=  7 8
schema  9 ?
}  @ A
;  A B
}!! 	
public(( 
static(( 
IEnumerable(( !
<((! "
Column((" (
>((( )
GetTableColumns((* 9
<((9 :
T((: ;
>((; <
(((< =
)((= >
{)) 	
var** 
tableColumns** 
=** 
new** "
List**# '
<**' (
Column**( .
>**. /
(**/ 0
)**0 1
;**1 2
var-- 
props-- 
=-- 
ReflectionHelper-- (
.--( )
GetProperties--) 6
<--6 7
T--7 8
>--8 9
(--9 :
)--: ;
;--; <
foreach00 
(00 
var00 
prop00 
in00  
props00! &
)00& '
{11 
var22 
type22 
=22 
prop22 
.22  
PropertyType22  ,
;22, -
var33 
tableColumn33 
=33  !
CreateColumn33" .
(33. /
prop33/ 3
)333 4
;334 5
SetIsPrimaryKey66 
(66  
type66  $
,66$ %
prop66& *
,66* +
tableColumn66, 7
)667 8
;668 9%
SetDatabaseGeneratedFlags99 )
(99) *
prop99* .
,99. /
tableColumn990 ;
)99; <
;99< =
tableColumns;; 
.;; 
Add;;  
(;;  !
tableColumn;;! ,
);;, -
;;;- .
}<< 
if?? 
(?? 
tableColumns?? 
.?? 
Count?? "
(??" #
x??# $
=>??% '
x??( )
.??) *
IsPrimaryKey??* 6
&&??7 9
x??: ;
.??; <

IsIdentity??< F
)??F G
>??H I
$num??J K
)??K L
{@@ 
throwAA 
newAA $
ModelDefinitionExceptionAA 2
(AA2 3
$strAA3 b
)AAb c
;AAc d
}BB 
ifEE 
(EE 
tableColumnsEE 
.EE 
GroupByEE $
(EE$ %
xEE% &
=>EE' )
xEE* +
.EE+ ,
NameEE, 0
)EE0 1
.EE1 2
AnyEE2 5
(EE5 6
gEE6 7
=>EE8 :
gEE; <
.EE< =
CountEE= B
(EEB C
)EEC D
>EEE F
$numEEG H
)EEH I
)EEI J
{FF 
throwGG 
newGG $
ModelDefinitionExceptionGG 2
(GG2 3
$strGG3 q
)GGq r
;GGr s
}HH 
returnJJ 
tableColumnsJJ 
;JJ  
}KK 	
privateRR 
staticRR 
ColumnRR 
CreateColumnRR *
(RR* +
PropertyInfoRR+ 7
propRR8 <
)RR< =
{SS 	
varTT 
tableColumnTT 
=TT 
newTT !
ColumnTT" (
{TT) *
IdTT+ -
=TT. /
propTT0 4
.TT4 5
NameTT5 9
,TT9 :
NameTT; ?
=TT@ A
propTTB F
.TTF G
NameTTG K
}TTL M
;TTM N
varVV 
colAttrVV 
=VV 
propVV 
.VV 
GetAttributeValueVV 0
(VV0 1
(VV1 2
ColumnAttributeVV2 A
aVVB C
)VVC D
=>VVE G
aVVH I
)VVI J
;VVJ K
ifWW 
(WW 
colAttrWW 
!=WW 
nullWW 
)WW  
{XX 
ifYY 
(YY 
!YY 
stringYY 
.YY 
IsNullOrWhiteSpaceYY .
(YY. /
colAttrYY/ 6
.YY6 7
NameYY7 ;
)YY; <
)YY< =
{ZZ 
tableColumn[[ 
.[[  
Name[[  $
=[[% &
colAttr[[' .
.[[. /
Name[[/ 3
;[[3 4
}\\ 
if__ 
(__ 
!__ 
string__ 
.__ 
IsNullOrWhiteSpace__ .
(__. /
colAttr__/ 6
.__6 7
TypeName__7 ?
)__? @
)__@ A
{`` 
tableColumnaa 
.aa  
	SqlDbTypeaa  )
=aa* +
	GetDbTypeaa, 5
(aa5 6
colAttraa6 =
.aa= >
TypeNameaa> F
)aaF G
;aaG H
}bb 
}cc 
returnee 
tableColumnee 
;ee 
}ff 	
privatenn 
staticnn 
voidnn 
SetIsPrimaryKeynn +
(nn+ ,
Typenn, 0
typenn1 5
,nn5 6
PropertyInfonn7 C
propnnD H
,nnH I
ColumnnnJ P
tableColumnnnQ \
)nn\ ]
{oo 	
tableColumnpp 
.pp 
IsPrimaryKeypp $
=pp% &
falsepp' ,
;pp, -
varrr 
keyAttrrr 
=rr 
proprr 
.rr 
GetAttributeValuerr 0
(rr0 1
(rr1 2
KeyAttributerr2 >
arr? @
)rr@ A
=>rrB D
arrE F
)rrF G
;rrG H
ifss 
(ss 
keyAttrss 
!=ss 
nullss 
)ss  
{tt 
ifvv 
(vv 
typevv 
.vv 
IsGenericTypevv &
&&vv' )
typevv* .
.vv. /$
GetGenericTypeDefinitionvv/ G
(vvG H
)vvH I
==vvJ L
typeofvvM S
(vvS T
NullablevvT \
<vv\ ]
>vv] ^
)vv^ _
)vv_ `
{ww 
throwxx 
newxx $
ModelDefinitionExceptionxx 6
(xx6 7
$strxx7 ^
)xx^ _
;xx_ `
}yy 
tableColumn|| 
.|| 
IsPrimaryKey|| (
=||) *
true||+ /
;||/ 0
}}} 
}~~ 	
private
ÖÖ 
static
ÖÖ 
void
ÖÖ '
SetDatabaseGeneratedFlags
ÖÖ 5
(
ÖÖ5 6
PropertyInfo
ÖÖ6 B
prop
ÖÖC G
,
ÖÖG H
Column
ÖÖI O
tableColumn
ÖÖP [
)
ÖÖ[ \
{
ÜÜ 	
tableColumn
áá 
.
áá 

IsIdentity
áá "
=
áá# $
false
áá% *
;
áá* +
tableColumn
àà 
.
àà 

IsComputed
àà "
=
àà# $
false
àà% *
;
àà* +
var
ää 
	dbGenAttr
ää 
=
ää 
prop
ää  
.
ää  !
GetAttributeValue
ää! 2
(
ää2 3
(
ää3 4(
DatabaseGeneratedAttribute
ää4 N
a
ääO P
)
ääP Q
=>
ääR T
a
ääU V
)
ääV W
;
ääW X
if
ãã 
(
ãã 
	dbGenAttr
ãã 
!=
ãã 
null
ãã !
)
ãã! "
{
åå 
var
éé 
dbGenOpt
éé 
=
éé 
	dbGenAttr
éé (
.
éé( )%
DatabaseGeneratedOption
éé) @
;
éé@ A
tableColumn
ëë 
.
ëë 

IsIdentity
ëë &
=
ëë' (
dbGenOpt
ëë) 1
==
ëë2 4%
DatabaseGeneratedOption
ëë5 L
.
ëëL M
Identity
ëëM U
;
ëëU V
tableColumn
íí 
.
íí 

IsComputed
íí &
=
íí' (
dbGenOpt
íí) 1
==
íí2 4%
DatabaseGeneratedOption
íí5 L
.
ííL M
Computed
ííM U
;
ííU V
}
ìì 
}
îî 	
private
õõ 
static
õõ 
	SqlDbType
õõ  
?
õõ  !
	GetDbType
õõ" +
(
õõ+ ,
string
õõ, 2
typeName
õõ3 ;
)
õõ; <
{
úú 	
int
ùù 
value
ùù 
;
ùù 
if
ûû 
(
ûû 
int
ûû 
.
ûû 
TryParse
ûû 
(
ûû 
typeName
ûû %
,
ûû% &
out
ûû' *
value
ûû+ 0
)
ûû0 1
&&
ûû2 4
!
üü 
Enum
üü 
.
üü 
	IsDefined
üü 
(
üü  
typeof
üü  &
(
üü& '
	SqlDbType
üü' 0
)
üü0 1
,
üü1 2
value
üü3 8
)
üü8 9
)
üü9 :
{
†† 
return
°° 
null
°° 
;
°° 
}
¢¢ 
	SqlDbType
§§ 
sqlType
§§ 
;
§§ 
if
•• 
(
•• 
Enum
•• 
.
•• 
TryParse
•• 
<
•• 
	SqlDbType
•• '
>
••' (
(
••( )
typeName
••) 1
,
••1 2
true
••3 7
,
••7 8
out
••9 <
sqlType
••= D
)
••D E
)
••E F
{
¶¶ 
return
ßß 
sqlType
ßß 
;
ßß 
}
®® 
return
©© 
null
©© 
;
©© 
}
™™ 	
}
´´ 
}¨¨  ”
CC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Helpers\QueryBuilder.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{		 
internal 
class 
QueryBuilder 
<  
T  !
>! "
{ 
private 
readonly 
	QueryType "

_queryType# -
;- .
private 
readonly 
string 

_tableName  *
;* +
private 
readonly 
List 
< 
Column $
>$ %
_entityColumns& 4
;4 5
private 

Dictionary 
< 
string !
,! "
object# )
>) *!
_entityPropertyValues+ @
=A B
newC F

DictionaryG Q
<Q R
stringR X
,X Y
objectZ `
>` a
(a b
)b c
;c d
private 

Dictionary 
< 
string !
,! "
object# )
>) *
_primaryKeyValues+ <
== >
new? B

DictionaryC M
<M N
stringN T
,T U
objectV \
>\ ]
(] ^
)^ _
;_ `
private 
WhereProperties 
_whereProperties  0
;0 1
public 
QueryBuilder 
( 
	QueryType %
	queryType& /
)/ 0
{ 	

_queryType 
= 
	queryType "
;" #
_entityColumns   
=   
ModelHelper   (
.  ( )
GetTableColumns  ) 8
<  8 9
T  9 :
>  : ;
(  ; <
)  < =
.  = >
ToList  > D
(  D E
)  E F
;  F G
if"" 
("" 
!"" 
_entityColumns"" 
.""  
Any""  #
(""# $
)""$ %
)""% &
{## 
throw$$ 
new$$ $
ModelDefinitionException$$ 2
($$2 3
$str$$3 f
)$$f g
;$$g h
}%% 
var(( 
	tableName(( 
=(( 
ModelHelper(( '
.((' (
GetTableName((( 4
<((4 5
T((5 6
>((6 7
(((7 8
)((8 9
;((9 :

_tableName)) 
=)) 
FormatTableName)) (
())( )
	tableName))) 2
.))2 3
Name))3 7
,))7 8
	tableName))9 B
.))B C
Schema))C I
)))I J
;))J K
}** 	
public00 
void00 
SetPrimaryKeyValues00 '
(00' (
params00( .
object00/ 5
[005 6
]006 7
primaryKeyValues008 H
)00H I
{11 	
if33 
(33 

_queryType33 
==33 
	QueryType33 '
.33' (
Insert33( .
||33/ 1

_queryType332 <
==33= ?
	QueryType33@ I
.33I J
Update33J P
)33P Q
{44 
throw55 
new55 %
InvalidOperationException55 3
(553 4
$str	554 ç
)
55ç é
;
55é è
}66 
if99 
(99 
!99 
primaryKeyValues99 !
.99! "
Any99" %
(99% &
)99& '
)99' (
{:: 
throw;; 
new;; 
ArgumentException;; +
(;;+ ,
$str;;, Y
,;;Y Z
nameof;;[ a
(;;a b
primaryKeyValues;;b r
);;r s
);;s t
;;;t u
}<< 
var?? 
primaryKeyColumns?? !
=??" #
_entityColumns??$ 2
.??2 3
Where??3 8
(??8 9
x??9 :
=>??; =
x??> ?
.??? @
IsPrimaryKey??@ L
)??L M
.??M N
ToList??N T
(??T U
)??U V
;??V W
ifBB 
(BB 
!BB 
primaryKeyColumnsBB "
.BB" #
AnyBB# &
(BB& '
)BB' (
)BB( )
{CC 
throwDD 
newDD $
ModelDefinitionExceptionDD 2
(DD2 3
$strDD3 a
)DDa b
;DDb c
}EE 
ifFF 
(FF 
primaryKeyColumnsFF !
.FF! "
CountFF" '
!=FF( *
primaryKeyValuesFF+ ;
.FF; <
LengthFF< B
)FFB C
{GG 
throwHH 
newHH 
ArgumentExceptionHH +
(HH+ ,
$str	HH, è
,
HHè ê
nameof
HHë ó
(
HHó ò
primaryKeyValues
HHò ®
)
HH® ©
)
HH© ™
;
HH™ ´
}II 
_primaryKeyValuesLL 
=LL 
newLL  #

DictionaryLL$ .
<LL. /
stringLL/ 5
,LL5 6
objectLL7 =
>LL= >
(LL> ?
primaryKeyColumnsLL? P
.LLP Q
CountLLQ V
)LLV W
;LLW X
forMM 
(MM 
varMM 
iMM 
=MM 
$numMM 
;MM 
iMM 
<MM 
primaryKeyColumnsMM  1
.MM1 2
CountMM2 7
;MM7 8
iMM9 :
++MM: <
)MM< =
{NN 
_primaryKeyValuesOO !
.OO! "
AddOO" %
(OO% &
primaryKeyColumnsOO& 7
[OO7 8
iOO8 9
]OO9 :
.OO: ;
IdOO; =
,OO= >
primaryKeyValuesOO? O
[OOO P
iOOP Q
]OOQ R
)OOR S
;OOS T
}PP 
MakeWherePropertiesSS 
(SS  
)SS  !
;SS! "
}TT 	
publicZZ 
voidZZ 
SetEntityInstanceZZ %
(ZZ% &
TZZ& '
entityInstanceZZ( 6
)ZZ6 7
{[[ 	
if]] 
(]] 

_queryType]] 
==]] 
	QueryType]] '
.]]' (
Select]]( .
)]]. /
{^^ 
throw__ 
new__ %
InvalidOperationException__ 3
(__3 4
$str	__4 Ç
)
__Ç É
;
__É Ñ
}`` 
ifcc 
(cc 
entityInstancecc 
==cc !
nullcc" &
)cc& '
{dd 
throwee 
newee !
ArgumentNullExceptionee /
(ee/ 0
nameofee0 6
(ee6 7
entityInstanceee7 E
)eeE F
)eeF G
;eeG H
}ff !
_entityPropertyValuesii !
=ii" #
ReflectionHelperii$ 4
.ii4 5
GetPropertyValuesii5 F
(iiF G
entityInstanceiiG U
)iiU V
;iiV W
varll 
primaryKeyColumnsll !
=ll" #
_entityColumnsll$ 2
.ll2 3
Wherell3 8
(ll8 9
xll9 :
=>ll; =
xll> ?
.ll? @
IsPrimaryKeyll@ L
)llL M
.llM N
ToListllN T
(llT U
)llU V
;llV W
_primaryKeyValuesnn 
=nn 
newnn  #

Dictionarynn$ .
<nn. /
stringnn/ 5
,nn5 6
objectnn7 =
>nn= >
(nn> ?
primaryKeyColumnsnn? P
.nnP Q
CountnnQ V
)nnV W
;nnW X
foreachoo 
(oo 
varoo 
keyColoo 
inoo  "
primaryKeyColumnsoo# 4
)oo4 5
{pp 
_primaryKeyValuesqq !
.qq! "
Addqq" %
(qq% &
keyColqq& ,
.qq, -
Idqq- /
,qq/ 0!
_entityPropertyValuesqq1 F
[qqF G
keyColqqG M
.qqM N
IdqqN P
]qqP Q
)qqQ R
;qqR S
}rr 
MakeWherePropertiesuu 
(uu  
)uu  !
;uu! "
}vv 	
public|| 
CommandSettings|| 
MakeCommandSettings|| 2
(||2 3
)||3 4
{}} 	
switch~~ 
(~~ 

_queryType~~ 
)~~ 
{ 
case
ÄÄ 
	QueryType
ÄÄ 
.
ÄÄ 
Delete
ÄÄ %
:
ÄÄ% &
return
ÄÄ' - 
MakeDeleteSettings
ÄÄ. @
(
ÄÄ@ A
)
ÄÄA B
;
ÄÄB C
case
ÅÅ 
	QueryType
ÅÅ 
.
ÅÅ 
Insert
ÅÅ %
:
ÅÅ% &
return
ÅÅ' - 
MakeInsertSettings
ÅÅ. @
(
ÅÅ@ A
)
ÅÅA B
;
ÅÅB C
case
ÇÇ 
	QueryType
ÇÇ 
.
ÇÇ 
Select
ÇÇ %
:
ÇÇ% &
return
ÇÇ' - 
MakeSelectSettings
ÇÇ. @
(
ÇÇ@ A
)
ÇÇA B
;
ÇÇB C
case
ÉÉ 
	QueryType
ÉÉ 
.
ÉÉ 
Update
ÉÉ %
:
ÉÉ% &
return
ÉÉ' - 
MakeUpdateSettings
ÉÉ. @
(
ÉÉ@ A
)
ÉÉA B
;
ÉÉB C
}
ÑÑ 
throw
ÖÖ 
new
ÖÖ !
SqlBuilderException
ÖÖ )
(
ÖÖ) *
$str
ÖÖ* H
)
ÖÖH I
;
ÖÖI J
}
ÜÜ 	
private
åå 
CommandSettings
åå  
MakeSelectSettings
åå  2
(
åå2 3
)
åå3 4
{
çç 	
var
èè 
colNames
èè 
=
èè 
string
èè !
.
èè! "
Join
èè" &
(
èè& '
$str
èè' +
,
èè+ ,
_entityColumns
èè- ;
.
èè; <
Select
èè< B
(
èèB C
x
èèC D
=>
èèE G
AddBrackets
èèH S
(
èèS T
x
èèT U
.
èèU V
Name
èèV Z
)
èèZ [
)
èè[ \
)
èè\ ]
.
èè] ^
RemoveFromEnd
èè^ k
(
èèk l
$str
èèl p
)
èèp q
;
èèq r
if
íí 
(
íí 
!
íí 
_primaryKeyValues
íí "
.
íí" #
Any
íí# &
(
íí& '
)
íí' (
)
íí( )
{
ìì 
return
îî 
new
îî 
CommandSettings
îî *
(
îî* +
string
îî+ 1
.
îî1 2
Format
îî2 8
(
îî8 9
$str
îî9 O
,
îîO P
colNames
îîQ Y
,
îîY Z

_tableName
îî[ e
)
îîe f
)
îîf g
;
îîg h
}
ïï 
return
óó 
new
óó 
CommandSettings
óó &
(
óó& '
string
óó' -
.
óó- .
Format
óó. 4
(
óó4 5
$str
óó5 U
,
óóU V
colNames
òò 
,
òò 

_tableName
òò $
,
òò$ %
_whereProperties
òò& 6
.
òò6 7
ConditionClause
òò7 F
)
òòF G
,
òòG H
_whereProperties
òòI Y
.
òòY Z

Parameters
òòZ d
)
òòd e
;
òòe f
}
ôô 	
private
üü 
CommandSettings
üü  
MakeDeleteSettings
üü  2
(
üü2 3
)
üü3 4
{
†† 	
if
¢¢ 
(
¢¢ 
!
¢¢ 
_primaryKeyValues
¢¢ "
.
¢¢" #
Any
¢¢# &
(
¢¢& '
)
¢¢' (
)
¢¢( )
{
££ 
throw
§§ 
new
§§ !
SqlBuilderException
§§ -
(
§§- .
$str
§§. e
)
§§e f
;
§§f g
}
•• 
return
¶¶ 
new
¶¶ 
CommandSettings
¶¶ &
(
¶¶& '
string
¶¶' -
.
¶¶- .
Format
¶¶. 4
(
¶¶4 5
$str
¶¶5 Q
,
¶¶Q R

_tableName
ßß 
,
ßß 
_whereProperties
ßß ,
.
ßß, -
ConditionClause
ßß- <
)
ßß< =
,
ßß= >
_whereProperties
ßß? O
.
ßßO P

Parameters
ßßP Z
)
ßßZ [
;
ßß[ \
}
®® 	
private
ÆÆ 
CommandSettings
ÆÆ  
MakeUpdateSettings
ÆÆ  2
(
ÆÆ2 3
)
ÆÆ3 4
{
ØØ 	
if
±± 
(
±± 
!
±± 
_primaryKeyValues
±± "
.
±±" #
Any
±±# &
(
±±& '
)
±±' (
)
±±( )
{
≤≤ 
throw
≥≥ 
new
≥≥ !
SqlBuilderException
≥≥ -
(
≥≥- .
$str
≥≥. e
)
≥≥e f
;
≥≥f g
}
¥¥ 
var
∑∑ 
props
∑∑ 
=
∑∑ "
MakeUpdateProperties
∑∑ ,
(
∑∑, -
)
∑∑- .
;
∑∑. /
var
ππ 
prms
ππ 
=
ππ 
new
ππ 
List
ππ 
<
ππ  
IDbDataParameter
ππ  0
>
ππ0 1
(
ππ1 2
props
ππ2 7
.
ππ7 8

Parameters
ππ8 B
)
ππB C
;
ππC D
prms
∫∫ 
.
∫∫ 
AddRange
∫∫ 
(
∫∫ 
_whereProperties
∫∫ *
.
∫∫* +

Parameters
∫∫+ 5
)
∫∫5 6
;
∫∫6 7
return
ºº 
new
ºº 
CommandSettings
ºº &
(
ºº& '
string
ºº' -
.
ºº- .
Format
ºº. 4
(
ºº4 5
$str
ºº5 T
,
ººT U

_tableName
ΩΩ 
,
ΩΩ 
props
ΩΩ !
.
ΩΩ! "
	SetClause
ΩΩ" +
,
ΩΩ+ ,
_whereProperties
ΩΩ- =
.
ΩΩ= >
ConditionClause
ΩΩ> M
)
ΩΩM N
,
ΩΩN O
prms
ΩΩP T
)
ΩΩT U
;
ΩΩU V
}
ææ 	
private
ƒƒ 
CommandSettings
ƒƒ  
MakeInsertSettings
ƒƒ  2
(
ƒƒ2 3
)
ƒƒ3 4
{
≈≈ 	
var
«« 
props
«« 
=
«« "
MakeInsertProperties
«« ,
(
««, -
)
««- .
;
««. /
var
ÀÀ 
identityColumn
ÀÀ 
=
ÀÀ  
_entityColumns
ÀÀ! /
.
ÀÀ/ 0
FirstOrDefault
ÀÀ0 >
(
ÀÀ> ?
x
ÀÀ? @
=>
ÀÀA C
x
ÀÀD E
.
ÀÀE F
IsPrimaryKey
ÀÀF R
&&
ÀÀS U
x
ÀÀV W
.
ÀÀW X

IsIdentity
ÀÀX b
)
ÀÀb c
;
ÀÀc d
if
ÕÕ 
(
ÕÕ 
identityColumn
ÕÕ 
!=
ÕÕ !
null
ÕÕ" &
)
ÕÕ& '
{
ŒŒ 
return
œœ 
new
œœ 
CommandSettings
œœ *
(
œœ* +
string
œœ+ 1
.
œœ1 2
Format
œœ2 8
(
œœ8 9
$str
œœ9 r
,
œœr s

_tableName
–– 
,
–– 
props
––  %
.
––% &
ColumnsClause
––& 3
,
––3 4
AddBrackets
––5 @
(
––@ A
identityColumn
––A O
.
––O P
Name
––P T
)
––T U
,
––U V
props
––W \
.
––\ ]
ValuesClause
––] i
)
––i j
,
––j k
props
––l q
.
––q r

Parameters
––r |
)
––| }
;
––} ~
}
—— 
return
”” 
new
”” 
CommandSettings
”” &
(
””& '
string
””' -
.
””- .
Format
””. 4
(
””4 5
$str
””5 Z
,
””Z [

_tableName
‘‘ 
,
‘‘ 
props
‘‘ !
.
‘‘! "
ColumnsClause
‘‘" /
,
‘‘/ 0
props
‘‘1 6
.
‘‘6 7
ValuesClause
‘‘7 C
)
‘‘C D
,
‘‘D E
props
‘‘F K
.
‘‘K L

Parameters
‘‘L V
)
‘‘V W
;
‘‘W X
}
’’ 	
private
€€ 
UpdateProperties
€€  "
MakeUpdateProperties
€€! 5
(
€€5 6
)
€€6 7
{
‹‹ 	
var
›› 
props
›› 
=
›› 
new
›› 
UpdateProperties
›› ,
(
››, -
)
››- .
;
››. /
var
ﬁﬁ 
	setClause
ﬁﬁ 
=
ﬁﬁ 
new
ﬁﬁ 
StringBuilder
ﬁﬁ  -
(
ﬁﬁ- .
)
ﬁﬁ. /
;
ﬁﬁ/ 0
foreach
‡‡ 
(
‡‡ 
var
‡‡ 
col
‡‡ 
in
‡‡ 
_entityColumns
‡‡  .
)
‡‡. /
{
·· 
if
„„ 
(
„„ 
col
„„ 
.
„„ 

IsComputed
„„ "
||
„„# %
col
„„& )
.
„„) *

IsIdentity
„„* 4
||
„„5 7
col
„„8 ;
.
„„; <
IsPrimaryKey
„„< H
)
„„H I
{
‰‰ 
continue
ÂÂ 
;
ÂÂ 
}
ÊÊ 
var
ËË 
prmName
ËË 
=
ËË 
QueryHelper
ËË )
.
ËË) *
MakeParameterName
ËË* ;
(
ËË; <
col
ËË< ?
.
ËË? @
Name
ËË@ D
)
ËËD E
;
ËËE F
	setClause
ÈÈ 
.
ÈÈ 
Append
ÈÈ  
(
ÈÈ  !
string
ÈÈ! '
.
ÈÈ' (
Format
ÈÈ( .
(
ÈÈ. /
$"
ÈÈ/ 1
{
ÈÈ1 2
AddBrackets
ÈÈ2 =
(
ÈÈ= >
col
ÈÈ> A
.
ÈÈA B
Name
ÈÈB F
)
ÈÈF G
}
ÈÈG H
 = 
ÈÈH K
{
ÈÈK L
prmName
ÈÈL S
}
ÈÈS T
, 
ÈÈT V
"
ÈÈV W
)
ÈÈW X
)
ÈÈX Y
;
ÈÈY Z
props
ÍÍ 
.
ÍÍ 

Parameters
ÍÍ  
.
ÍÍ  !
Add
ÍÍ! $
(
ÍÍ$ %
MakeSqlParameter
ÍÍ% 5
(
ÍÍ5 6
prmName
ÍÍ6 =
,
ÍÍ= >#
_entityPropertyValues
ÍÍ? T
[
ÍÍT U
col
ÍÍU X
.
ÍÍX Y
Id
ÍÍY [
]
ÍÍ[ \
.
ÍÍ\ ]
ToDBNull
ÍÍ] e
(
ÍÍe f
)
ÍÍf g
,
ÍÍg h
col
ÍÍi l
.
ÍÍl m
	SqlDbType
ÍÍm v
)
ÍÍv w
)
ÍÍw x
;
ÍÍx y
}
ÎÎ 
props
ÏÏ 
.
ÏÏ 
	SetClause
ÏÏ 
=
ÏÏ 
	setClause
ÏÏ '
.
ÏÏ' (
ToString
ÏÏ( 0
(
ÏÏ0 1
)
ÏÏ1 2
.
ÏÏ2 3
RemoveFromEnd
ÏÏ3 @
(
ÏÏ@ A
$str
ÏÏA E
)
ÏÏE F
;
ÏÏF G
if
ÔÔ 
(
ÔÔ 
string
ÔÔ 
.
ÔÔ 
IsNullOrEmpty
ÔÔ $
(
ÔÔ$ %
props
ÔÔ% *
.
ÔÔ* +
	SetClause
ÔÔ+ 4
)
ÔÔ4 5
)
ÔÔ5 6
{
 
throw
ÒÒ 
new
ÒÒ !
SqlBuilderException
ÒÒ -
(
ÒÒ- .
$str
ÒÒ. b
)
ÒÒb c
;
ÒÒc d
}
ÚÚ 
return
ÛÛ 
props
ÛÛ 
;
ÛÛ 
}
ÙÙ 	
private
˙˙ 
InsertProperties
˙˙  "
MakeInsertProperties
˙˙! 5
(
˙˙5 6
)
˙˙6 7
{
˚˚ 	
var
¸¸ 
props
¸¸ 
=
¸¸ 
new
¸¸ 
InsertProperties
¸¸ ,
(
¸¸, -
)
¸¸- .
;
¸¸. /
var
˝˝ 
columnsClause
˝˝ 
=
˝˝ 
new
˝˝  #
StringBuilder
˝˝$ 1
(
˝˝1 2
)
˝˝2 3
;
˝˝3 4
var
˛˛ 
valuesClause
˛˛ 
=
˛˛ 
new
˛˛ "
StringBuilder
˛˛# 0
(
˛˛0 1
)
˛˛1 2
;
˛˛2 3
foreach
ÄÄ 
(
ÄÄ 
var
ÄÄ 
col
ÄÄ 
in
ÄÄ 
_entityColumns
ÄÄ  .
)
ÄÄ. /
{
ÅÅ 
if
ÉÉ 
(
ÉÉ 
col
ÉÉ 
.
ÉÉ 

IsComputed
ÉÉ "
||
ÉÉ# %
col
ÉÉ& )
.
ÉÉ) *

IsIdentity
ÉÉ* 4
)
ÉÉ4 5
{
ÑÑ 
continue
ÖÖ 
;
ÖÖ 
}
ÜÜ 
var
àà 
prmName
àà 
=
àà 
QueryHelper
àà )
.
àà) *
MakeParameterName
àà* ;
(
àà; <
col
àà< ?
.
àà? @
Name
àà@ D
)
ààD E
;
ààE F
columnsClause
ââ 
.
ââ 
Append
ââ $
(
ââ$ %
AddCommaDelimiter
ââ% 6
(
ââ6 7
AddBrackets
ââ7 B
(
ââB C
col
ââC F
.
ââF G
Name
ââG K
)
ââK L
)
ââL M
)
ââM N
;
ââN O
valuesClause
ää 
.
ää 
Append
ää #
(
ää# $
AddCommaDelimiter
ää$ 5
(
ää5 6
prmName
ää6 =
)
ää= >
)
ää> ?
;
ää? @
props
ãã 
.
ãã 

Parameters
ãã  
.
ãã  !
Add
ãã! $
(
ãã$ %
MakeSqlParameter
ãã% 5
(
ãã5 6
prmName
ãã6 =
,
ãã= >#
_entityPropertyValues
ãã? T
[
ããT U
col
ããU X
.
ããX Y
Id
ããY [
]
ãã[ \
.
ãã\ ]
ToDBNull
ãã] e
(
ããe f
)
ããf g
,
ããg h
col
ããi l
.
ããl m
	SqlDbType
ããm v
)
ããv w
)
ããw x
;
ããx y
}
åå 
props
çç 
.
çç 
ColumnsClause
çç 
=
çç  !
columnsClause
çç" /
.
çç/ 0
ToString
çç0 8
(
çç8 9
)
çç9 :
.
çç: ;
RemoveFromEnd
çç; H
(
ççH I
$str
ççI M
)
ççM N
;
ççN O
props
éé 
.
éé 
ValuesClause
éé 
=
éé  
valuesClause
éé! -
.
éé- .
ToString
éé. 6
(
éé6 7
)
éé7 8
.
éé8 9
RemoveFromEnd
éé9 F
(
ééF G
$str
ééG K
)
ééK L
;
ééL M
if
ëë 
(
ëë 
string
ëë 
.
ëë 
IsNullOrEmpty
ëë $
(
ëë$ %
props
ëë% *
.
ëë* +
ColumnsClause
ëë+ 8
)
ëë8 9
)
ëë9 :
{
íí 
throw
ìì 
new
ìì !
SqlBuilderException
ìì -
(
ìì- .
$str
ìì. b
)
ììb c
;
ììc d
}
îî 
return
ïï 
props
ïï 
;
ïï 
}
ññ 	
private
õõ 
void
õõ !
MakeWhereProperties
õõ (
(
õõ( )
)
õõ) *
{
úú 	
_whereProperties
ùù 
=
ùù 
new
ùù "
WhereProperties
ùù# 2
(
ùù2 3
)
ùù3 4
;
ùù4 5
var
ûû 
conditionClause
ûû 
=
ûû  !
new
ûû" %
StringBuilder
ûû& 3
(
ûû3 4
)
ûû4 5
;
ûû5 6
foreach
†† 
(
†† 
var
†† 

primaryKey
†† #
in
††$ &
_primaryKeyValues
††' 8
)
††8 9
{
°° 
var
¢¢ 
col
¢¢ 
=
¢¢ 
_entityColumns
¢¢ (
.
¢¢( )
First
¢¢) .
(
¢¢. /
x
¢¢/ 0
=>
¢¢1 3
x
¢¢4 5
.
¢¢5 6
Id
¢¢6 8
==
¢¢9 ;

primaryKey
¢¢< F
.
¢¢F G
Key
¢¢G J
)
¢¢J K
;
¢¢K L
var
§§ 
prmName
§§ 
=
§§ 
QueryHelper
§§ )
.
§§) *
MakeParameterName
§§* ;
(
§§; <
col
§§< ?
.
§§? @
Name
§§@ D
)
§§D E
;
§§E F
conditionClause
•• 
.
••  
Append
••  &
(
••& '
$"
••' )
{
••) *
AddBrackets
••* 5
(
••5 6
col
••6 9
.
••9 :
Name
••: >
)
••> ?
}
••? @
 = 
••@ C
{
••C D
prmName
••D K
}
••K L
 and 
••L Q
"
••Q R
)
••R S
;
••S T
_whereProperties
ßß  
.
ßß  !

Parameters
ßß! +
.
ßß+ ,
Add
ßß, /
(
ßß/ 0
MakeSqlParameter
ßß0 @
(
ßß@ A
prmName
ßßA H
,
ßßH I

primaryKey
ßßJ T
.
ßßT U
Value
ßßU Z
.
ßßZ [
ToDBNull
ßß[ c
(
ßßc d
)
ßßd e
,
ßße f
col
ßßg j
.
ßßj k
	SqlDbType
ßßk t
)
ßßt u
)
ßßu v
;
ßßv w
}
®® 
_whereProperties
©© 
.
©© 
ConditionClause
©© ,
=
©©- .
conditionClause
©©/ >
.
©©> ?
ToString
©©? G
(
©©G H
)
©©H I
.
©©I J
RemoveFromEnd
©©J W
(
©©W X
$str
©©X _
)
©©_ `
;
©©` a
}
™™ 	
private
±± 
string
±± 
AddBrackets
±± "
(
±±" #
string
±±# )
val
±±* -
)
±±- .
{
≤≤ 	
return
≥≥ 
$"
≥≥ 
[
≥≥ 
{
≥≥ 
val
≥≥ 
}
≥≥ 
]
≥≥ 
"
≥≥ 
;
≥≥ 
}
¥¥ 	
private
ªª 
string
ªª 
AddCommaDelimiter
ªª (
(
ªª( )
string
ªª) /
val
ªª0 3
)
ªª3 4
{
ºº 	
return
ΩΩ 
$"
ΩΩ 
{
ΩΩ 
val
ΩΩ 
}
ΩΩ 
, 
ΩΩ 
"
ΩΩ 
;
ΩΩ 
}
ææ 	
private
∆∆ 
string
∆∆ 
FormatTableName
∆∆ &
(
∆∆& '
string
∆∆' -
name
∆∆. 2
,
∆∆2 3
string
∆∆4 :
schema
∆∆; A
)
∆∆A B
{
«« 	
if
»» 
(
»» 
string
»» 
.
»»  
IsNullOrWhiteSpace
»» )
(
»») *
schema
»»* 0
)
»»0 1
)
»»1 2
{
…… 
return
   
AddBrackets
   "
(
  " #
name
  # '
)
  ' (
;
  ( )
}
ÀÀ 
else
ÃÃ 
{
ÕÕ 
return
ŒŒ 
$"
ŒŒ 
{
ŒŒ 
AddBrackets
ŒŒ %
(
ŒŒ% &
schema
ŒŒ& ,
)
ŒŒ, -
}
ŒŒ- .
.
ŒŒ. /
{
ŒŒ/ 0
AddBrackets
ŒŒ0 ;
(
ŒŒ; <
name
ŒŒ< @
)
ŒŒ@ A
}
ŒŒA B
"
ŒŒB C
;
ŒŒC D
}
œœ 
}
–– 	
private
ŸŸ 
SqlParameter
ŸŸ 
MakeSqlParameter
ŸŸ -
(
ŸŸ- .
string
ŸŸ. 4
name
ŸŸ5 9
,
ŸŸ9 :
object
ŸŸ; A
value
ŸŸB G
,
ŸŸG H
	SqlDbType
ŸŸI R
?
ŸŸR S
	sqlDbType
ŸŸT ]
)
ŸŸ] ^
{
⁄⁄ 	
var
€€ 
param
€€ 
=
€€ 
new
€€ 
SqlParameter
€€ (
(
€€( )
name
€€) -
,
€€- .
value
€€/ 4
)
€€4 5
;
€€5 6
if
‹‹ 
(
‹‹ 
	sqlDbType
‹‹ 
.
‹‹ 
HasValue
‹‹ "
)
‹‹" #
param
‹‹$ )
.
‹‹) *
	SqlDbType
‹‹* 3
=
‹‹4 5
	sqlDbType
‹‹6 ?
.
‹‹? @
Value
‹‹@ E
;
‹‹E F
return
›› 
param
›› 
;
›› 
}
ﬁﬁ 	
}
ﬂﬂ 
}‡‡ °A
BC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Helpers\QueryHelper.cs
	namespace

 	
	StatKings


 
.

 
SqlServerAdoNet

 #
{ 
public 

static 
class 
QueryHelper #
{ 
public 
static 
IDbDataParameter &$
MakeTableValuedParameter' ?
<? @
T@ A
>A B
(B C
stringC I
	paramNameJ S
,S T
IEnumerableU `
<` a
Ta b
>b c
datad h
,h i
paramsj p
stringq w
[w x
]x y
columnNames	z Ö
)
Ö Ü
{ 	
var 
prm 
= 
new 
SqlParameter &
(& '
	paramName' 0
,0 1
	SqlDbType2 ;
.; <

Structured< F
)F G
;G H
using 
( 
var 
table 
= 
new "
	DataTable# ,
(, -
)- .
). /
{ 
if   
(   
typeof   
(   
T   
)   
.   
IsValueType   )
||  * ,
typeof  - 3
(  3 4
T  4 5
)  5 6
.  6 7
Equals  7 =
(  = >
typeof  > D
(  D E
string  E K
)  K L
)  L M
)  M N
{!! 
var"" 
colName"" 
=""  !
(""" #
columnNames""# .
."". /
Length""/ 5
>""6 7
$num""8 9
)""9 :
?""; <
columnNames""= H
[""H I
$num""I J
]""J K
:""L M
$str""N U
;""U V
var## 
dc## 
=## 
new##  

DataColumn##! +
(##+ ,
colName##, 3
)##3 4
;##4 5
dc$$ 
.$$ 
DataType$$ 
=$$  !
typeof$$" (
($$( )
T$$) *
)$$* +
;$$+ ,
table%% 
.%% 
Columns%% !
.%%! "
Add%%" %
(%%% &
dc%%& (
)%%( )
;%%) *
foreach'' 
('' 
var''  
item''! %
in''& (
data'') -
)''- .
{(( 
var)) 
dr)) 
=))  
table))! &
.))& '
NewRow))' -
())- .
))). /
;))/ 0
dr** 
[** 
$num** 
]** 
=** 
item**  $
;**$ %
table++ 
.++ 
Rows++ "
.++" #
Add++# &
(++& '
dr++' )
)++) *
;++* +
},, 
}-- 
else.. 
{// 
if33 
(33 
columnNames33 #
.33# $
Length33$ *
==33+ -
$num33. /
)33/ 0
{44 
columnNames55 #
=55$ %
ReflectionHelper55& 6
.556 7
GetPropertyNames557 G
<55G H
T55H I
>55I J
(55J K
)55K L
.55L M
ToArray55M T
(55T U
)55U V
;55V W
}66 
using88 
(88 
var88 
reader88 %
=88& '
ObjectReader88( 4
.884 5
Create885 ;
(88; <
data88< @
,88@ A
columnNames88B M
)88M N
)88N O
{99 
table:: 
.:: 
Load:: "
(::" #
reader::# )
)::) *
;::* +
};; 
}<< 
prm>> 
.>> 
Value>> 
=>> 
table>> !
;>>! "
}?? 
returnAA 
prmAA 
;AA 
}BB 	
publicKK 
staticKK 
InClausePropertiesKK (%
ParameterizeInClauseQueryKK) B
<KKB C
TKKC D
>KKD E
(KKE F
stringKKF L
queryKKM R
,KKR S
IEnumerableKKT _
<KK_ `
TKK` a
>KKa b
inClauseDataKKc o
)KKo p
{LL 	
ifMM 
(MM 
stringMM 
.MM 
IsNullOrWhiteSpaceMM )
(MM) *
queryMM* /
)MM/ 0
)MM0 1
{NN 
throwOO 
newOO 
ArgumentExceptionOO +
(OO+ ,
$strOO, B
,OOB C
nameofOOD J
(OOJ K
queryOOK P
)OOP Q
)OOQ R
;OOR S
}PP 
ifQQ 
(QQ 
queryQQ 
.QQ 
IndexOfQQ 
(QQ 
$strQQ (
,QQ( )
StringComparisonQQ* :
.QQ: ;
OrdinalIgnoreCaseQQ; L
)QQL M
==QQN P
-QQQ R
$numQQR S
)QQS T
{RR 
throwSS 
newSS 
ArgumentExceptionSS +
(SS+ ,
$strSS, V
,SSV W
nameofSSX ^
(SS^ _
querySS_ d
)SSd e
)SSe f
;SSf g
}TT 
ifUU 
(UU 
inClauseDataUU 
==UU 
nullUU  $
||UU% '
!UU( )
inClauseDataUU) 5
.UU5 6
AnyUU6 9
(UU9 :
)UU: ;
)UU; <
{VV 
throwWW 
newWW 
ArgumentExceptionWW +
(WW+ ,
$strWW, Q
,WWQ R
nameofWWS Y
(WWY Z
inClauseDataWWZ f
)WWf g
)WWg h
;WWh i
}XX 
var[[ 

paramNames[[ 
=[[ 
inClauseData[[ )
.[[) *
Select[[* 0
([[0 1
([[1 2
s[[2 3
,[[3 4
i[[5 6
)[[6 7
=>[[8 :
MakeParameterName[[; L
([[L M
$str[[M W
+[[X Y
i[[Z [
.[[[ \
ToString[[\ d
([[d e
)[[e f
)[[f g
)[[g h
.[[h i
ToArray[[i p
([[p q
)[[q r
;[[r s
var^^ 
outQuery^^ 
=^^ 
string^^ !
.^^! "
Format^^" (
(^^( )
query^^) .
,^^. /
String^^0 6
.^^6 7
Join^^7 ;
(^^; <
$str^^< ?
,^^? @

paramNames^^A K
)^^K L
)^^L M
;^^M N
varaa 
prmsaa 
=aa 
newaa 
Listaa 
<aa  
IDbDataParameteraa  0
>aa0 1
(aa1 2
)aa2 3
;aa3 4
forbb 
(bb 
intbb 
ibb 
=bb 
$numbb 
;bb 
ibb 
<bb 

paramNamesbb  *
.bb* +
Lengthbb+ 1
;bb1 2
ibb3 4
++bb4 6
)bb6 7
{cc 
prmsdd 
.dd 
Adddd 
(dd 
newdd 
SqlParameterdd )
(dd) *

paramNamesdd* 4
[dd4 5
idd5 6
]dd6 7
,dd7 8
inClauseDatadd9 E
.ddE F
	ElementAtddF O
(ddO P
iddP Q
)ddQ R
.ddR S
ToDBNullddS [
(dd[ \
)dd\ ]
)dd] ^
)dd^ _
;dd_ `
}ee 
returngg 
newgg 
InClausePropertiesgg )
(gg) *
)gg* +
{gg, -
Querygg. 3
=gg4 5
outQuerygg6 >
,gg> ?

Parametersgg@ J
=ggK L
prmsggM Q
}ggR S
;ggS T
}hh 	
publicoo 
staticoo 
objectoo 
ToDBNulloo %
(oo% &
thisoo& *
objectoo+ 1
valueoo2 7
)oo7 8
{pp 	
returnqq 
valueqq 
??qq 
DBNullqq "
.qq" #
Valueqq# (
;qq( )
}rr 	
internalyy 
staticyy 
stringyy 
MakeParameterNameyy 0
(yy0 1
stringyy1 7
	paramNameyy8 A
)yyA B
{zz 	
return{{ 
$str{{ 
+{{ 
	paramName{{ "
;{{" #
}|| 	
}}} 
}~~ ŒE
GC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Helpers\ReflectionHelper.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
internal 
static 
class 
ReflectionHelper *
{ 
public 
static 
TValue 
GetAttributeValue .
<. /

TAttribute/ 9
,9 :
TValue; A
>A B
(B C
thisC G
TypeH L
typeM Q
,Q R
FuncS W
<W X

TAttributeX b
,b c
TValued j
>j k
valueSelectorl y
)y z
where	{ Ä

TAttribute
Å ã
:
å ç
	Attribute
é ó
{ 	
try 
{ 
var 
attr 
= 
type 
.  
GetCustomAttributes  3
(3 4
typeof4 :
(: ;

TAttribute; E
)E F
,F G
trueH L
)L M
.M N
FirstOrDefaultN \
(\ ]
)] ^
as_ a

TAttributeb l
;l m
return 
GetAttributeValue (
(( )
attr) -
,- .
valueSelector/ <
)< =
;= >
} 
catch 
{ 
return 
default 
( 
TValue %
)% &
;& '
}   
}!! 	
public++ 
static++ 
TValue++ 
GetAttributeValue++ .
<++. /

TAttribute++/ 9
,++9 :
TValue++; A
>++A B
(++B C
this++C G
PropertyInfo++H T
prop++U Y
,++Y Z
Func++[ _
<++_ `

TAttribute++` j
,++j k
TValue++l r
>++r s
valueSelector	++t Å
)
++Å Ç
where
++É à

TAttribute
++â ì
:
++î ï
	Attribute
++ñ ü
{,, 	
try-- 
{.. 
var// 
attr// 
=// 
prop// 
.//  
GetCustomAttributes//  3
(//3 4
typeof//4 :
(//: ;

TAttribute//; E
)//E F
,//F G
true//H L
)//L M
.//M N
FirstOrDefault//N \
(//\ ]
)//] ^
as//_ a

TAttribute//b l
;//l m
return00 
GetAttributeValue00 (
(00( )
attr00) -
,00- .
valueSelector00/ <
)00< =
;00= >
}11 
catch22 
{33 
return44 
default44 
(44 
TValue44 %
)44% &
;44& '
}55 
}66 	
private@@ 
static@@ 
TValue@@ 
GetAttributeValue@@ /
<@@/ 0

TAttribute@@0 :
,@@: ;
TValue@@< B
>@@B C
(@@C D

TAttribute@@D N
attr@@O S
,@@S T
Func@@U Y
<@@Y Z

TAttribute@@Z d
,@@d e
TValue@@f l
>@@l m
valueSelector@@n {
)@@{ |
where	@@} Ç

TAttribute
@@É ç
:
@@é è
	Attribute
@@ê ô
{AA 	
ifBB 
(BB 
attrBB 
!=BB 
nullBB 
)BB 
{CC 
returnDD 
valueSelectorDD $
(DD$ %
attrDD% )
)DD) *
;DD* +
}EE 
returnFF 
defaultFF 
(FF 
TValueFF !
)FF! "
;FF" #
}GG 	
publicOO 
staticOO 
PropertyInfoOO "
GetPropertyOO# .
<OO. /
TOO/ 0
>OO0 1
(OO1 2
stringOO2 8
propNameOO9 A
)OOA B
{PP 	
returnQQ 
typeofQQ 
(QQ 
TQQ 
)QQ 
.QQ 
GetPropertyQQ (
(QQ( )
propNameQQ) 1
,QQ1 2
BindingFlagsQQ3 ?
.QQ? @

IgnoreCaseQQ@ J
|QQK L
BindingFlagsQQM Y
.QQY Z
PublicQQZ `
|QQa b
BindingFlagsQQc o
.QQo p
InstanceQQp x
)QQx y
;QQy z
}RR 	
publicYY 
staticYY 
PropertyInfoYY "
[YY" #
]YY# $
GetPropertiesYY% 2
<YY2 3
TYY3 4
>YY4 5
(YY5 6
)YY6 7
{ZZ 	
return[[ 
GetProperties[[  
([[  !
typeof[[! '
([[' (
T[[( )
)[[) *
)[[* +
;[[+ ,
}\\ 	
privatecc 
staticcc 
PropertyInfocc #
[cc# $
]cc$ %
GetPropertiescc& 3
(cc3 4
Typecc4 8
typecc9 =
)cc= >
{dd 	
returnee 
typeee 
.ee 
GetPropertiesee %
(ee% &
BindingFlagsee& 2
.ee2 3

IgnoreCaseee3 =
|ee> ?
BindingFlagsee@ L
.eeL M
PubliceeM S
|eeT U
BindingFlagseeV b
.eeb c
Instanceeec k
)eek l
;eel m
}ff 	
publicnn 
staticnn 

Dictionarynn  
<nn  !
stringnn! '
,nn' (
objectnn) /
>nn/ 0
GetPropertyValuesnn1 B
<nnB C
TnnC D
>nnD E
(nnE F
TnnF G
entitynnH N
)nnN O
{oo 	
varpp 

propValuespp 
=pp 
newpp  

Dictionarypp! +
<pp+ ,
stringpp, 2
,pp2 3
objectpp4 :
>pp: ;
(pp; <
)pp< =
;pp= >
varrr 
propsrr 
=rr 
GetPropertiesrr %
(rr% &
entityrr& ,
.rr, -
GetTyperr- 4
(rr4 5
)rr5 6
)rr6 7
;rr7 8
foreachss 
(ss 
varss 
propss 
inss  
propsss! &
)ss& '
{tt 

propValuesuu 
.uu 
Adduu 
(uu 
propuu #
.uu# $
Nameuu$ (
,uu( )
propuu* .
.uu. /
GetValueuu/ 7
(uu7 8
entityuu8 >
,uu> ?
nulluu@ D
)uuD E
)uuE F
;uuF G
}vv 
returnxx 

propValuesxx 
;xx 
}yy 	
public
ÄÄ 
static
ÄÄ 
IEnumerable
ÄÄ !
<
ÄÄ! "
string
ÄÄ" (
>
ÄÄ( )
GetPropertyNames
ÄÄ* :
<
ÄÄ: ;
T
ÄÄ; <
>
ÄÄ< =
(
ÄÄ= >
)
ÄÄ> ?
{
ÅÅ 	
var
ÇÇ 
props
ÇÇ 
=
ÇÇ 
GetProperties
ÇÇ %
<
ÇÇ% &
T
ÇÇ& '
>
ÇÇ' (
(
ÇÇ( )
)
ÇÇ) *
;
ÇÇ* +
return
ÉÉ 
props
ÉÉ 
.
ÉÉ 
Select
ÉÉ 
(
ÉÉ  
x
ÉÉ  !
=>
ÉÉ" $
x
ÉÉ% &
.
ÉÉ& '
Name
ÉÉ' +
)
ÉÉ+ ,
;
ÉÉ, -
}
ÑÑ 	
public
ãã 
static
ãã 

Dictionary
ãã  
<
ãã  !
string
ãã! '
,
ãã' (
string
ãã) /
>
ãã/ 0$
GetPropertyColumnNames
ãã1 G
<
ããG H
T
ããH I
>
ããI J
(
ããJ K
)
ããK L
{
åå 	
var
çç 
colNames
çç 
=
çç 
new
çç 

Dictionary
çç )
<
çç) *
string
çç* 0
,
çç0 1
string
çç2 8
>
çç8 9
(
çç9 :
)
çç: ;
;
çç; <
var
èè 
props
èè 
=
èè 
GetProperties
èè %
<
èè% &
T
èè& '
>
èè' (
(
èè( )
)
èè) *
;
èè* +
foreach
êê 
(
êê 
var
êê 
prop
êê 
in
êê  
props
êê! &
)
êê& '
{
ëë 
var
íí 
colName
íí 
=
íí 
prop
íí "
.
íí" #
GetAttributeValue
íí# 4
(
íí4 5
(
íí5 6
ColumnAttribute
íí6 E
a
ííF G
)
ííG H
=>
ííI K
a
ííL M
.
ííM N
Name
ííN R
)
ííR S
??
ííT V
prop
ííW [
.
íí[ \
Name
íí\ `
;
íí` a
colNames
ìì 
.
ìì 
Add
ìì 
(
ìì 
prop
ìì !
.
ìì! "
Name
ìì" &
,
ìì& '
colName
ìì( /
)
ìì/ 0
;
ìì0 1
}
îî 
return
ññ 
colNames
ññ 
;
ññ 
}
óó 	
}
òò 
}ôô ‡
DC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Interfaces\ISqlRunner.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
public 

	interface 

ISqlRunner 
{ 
T 	
Get
 
< 
T 
> 
( 
params 
object 
[ 
]  
primaryKeyValues! 1
)1 2
;2 3
IEnumerable

 
<

 
T

 
>

 
GetAll

 
<

 
T

 
>

  
(

  !
)

! "
;

" #
void 
Delete 
< 
T 
> 
( 
params 
object $
[$ %
]% &
primaryKeyValues' 7
)7 8
;8 9
int 
InsertForId 
< 
T 
> 
( 
T 
entity #
)# $
;$ %
void 
Insert 
< 
T 
> 
( 
T 
entity 
)  
;  !
void 
Update 
< 
T 
> 
( 
T 
entity 
)  
;  !
void 
ExecuteNonQuery 
( 
CommandSettings ,
commandSettings- <
)< =
;= >
object 
ExecuteScalar 
( 
CommandSettings ,
commandSettings- <
)< =
;= >
T 	
ExecuteReaderFirst
 
< 
T 
> 
(  
CommandSettings  /
commandSettings0 ?
)? @
;@ A
IEnumerable 
< 
T 
> 
ExecuteReader $
<$ %
T% &
>& '
(' (
CommandSettings( 7
commandSettings8 G
)G H
;H I
} 
} ®
EC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Interfaces\IUnitOfWork.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
public 

	interface 
IUnitOfWork  
:! "
IDisposable# .
{ 

IDbCommand 
CreateCommand  
(  !
)! "
;" #
void		 
BeginTransaction		 
(		 
)		 
;		  
void

 
Commit

 
(

 
)

 
;

 
void 
Rollback 
( 
) 
; 
} 
} æ	
<C:\Projects\SqlServerAdoNet\SqlServerAdoNet\Models\Column.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
internal 
class 
Column 
{		 
public 
string 
Id 
{ 
get 
; 
set  #
;# $
}% &
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
bool 
IsPrimaryKey  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 

IsIdentity 
{  
get! $
;$ %
set& )
;) *
}+ ,
public!! 
bool!! 

IsComputed!! 
{!!  
get!!! $
;!!$ %
set!!& )
;!!) *
}!!+ ,
public&& 
	SqlDbType&& 
?&& 
	SqlDbType&& #
{&&$ %
get&&& )
;&&) *
set&&+ .
;&&. /
}&&0 1
}'' 
}(( Í$
EC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Models\CommandSettings.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
public

 

class

 
CommandSettings

  
{ 
private 
CommandType 
_commandType (
;( )
private 
string 
_commandText #
;# $
private 
IEnumerable 
< 
IDbDataParameter ,
>, -
_parameters. 9
;9 :
public 
CommandSettings 
( 
string %
commandText& 1
)1 2
{ 	
SetProperties 
( 
CommandType %
.% &
Text& *
,* +
commandText, 7
,7 8
new9 <
List= A
<A B
IDbDataParameterB R
>R S
(S T
)T U
)U V
;V W
} 	
public 
CommandSettings 
( 
CommandType *
commandType+ 6
,6 7
string8 >
commandText? J
)J K
{ 	
SetProperties   
(   
commandType   %
,  % &
commandText  ' 2
,  2 3
new  4 7
List  8 <
<  < =
IDbDataParameter  = M
>  M N
(  N O
)  O P
)  P Q
;  Q R
}!! 	
public(( 
CommandSettings(( 
((( 
string(( %
commandText((& 1
,((1 2
IEnumerable((3 >
<((> ?
IDbDataParameter((? O
>((O P

parameters((Q [
)(([ \
{)) 	
SetProperties** 
(** 
CommandType** %
.**% &
Text**& *
,*** +
commandText**, 7
,**7 8

parameters**9 C
)**C D
;**D E
}++ 	
public33 
CommandSettings33 
(33 
CommandType33 *
commandType33+ 6
,336 7
string338 >
commandText33? J
,33J K
IEnumerable33L W
<33W X
IDbDataParameter33X h
>33h i

parameters33j t
)33t u
{44 	
SetProperties55 
(55 
commandType55 %
,55% &
commandText55' 2
,552 3

parameters554 >
)55> ?
;55? @
}66 	
public;; 
CommandType;; 
CommandType;; &
{;;' (
get;;) ,
{;;- .
return;;/ 5
_commandType;;6 B
;;;B C
};;D E
};;F G
public@@ 
string@@ 
CommandText@@ !
{@@" #
get@@$ '
{@@( )
return@@* 0
_commandText@@1 =
;@@= >
}@@? @
}@@A B
publicEE 
IEnumerableEE 
<EE 
IDbDataParameterEE +
>EE+ ,

ParametersEE- 7
{EE8 9
getEE: =
{EE> ?
returnEE@ F
_parametersEEG R
;EER S
}EET U
}EEV W
privateMM 
voidMM 
SetPropertiesMM "
(MM" #
CommandTypeMM# .
commandTypeMM/ :
,MM: ;
stringMM< B
commandTextMMC N
,MMN O
IEnumerableMMP [
<MM[ \
IDbDataParameterMM\ l
>MMl m

parametersMMn x
)MMx y
{NN 	
ifOO 
(OO 
commandTypeOO 
==OO 
CommandTypeOO *
.OO* +
TableDirectOO+ 6
)OO6 7
{PP 
throwQQ 
newQQ 
ArgumentExceptionQQ +
(QQ+ ,
$strQQ, T
,QQT U
nameofQQV \
(QQ\ ]
commandTypeQQ] h
)QQh i
)QQi j
;QQj k
}RR 
ifTT 
(TT 
stringTT 
.TT 
IsNullOrWhiteSpaceTT )
(TT) *
commandTextTT* 5
)TT5 6
)TT6 7
{UU 
throwVV 
newVV 
ArgumentExceptionVV +
(VV+ ,
$"VV, .%
Command text is required.VV. G
"VVG H
,VVH I
nameofVVJ P
(VVP Q
commandTextVVQ \
)VV\ ]
)VV] ^
;VV^ _
}WW 
_commandTypeYY 
=YY 
commandTypeYY &
;YY& '
_commandTextZZ 
=ZZ 
commandTextZZ &
;ZZ& '
_parameters[[ 
=[[ 

parameters[[ $
;[[$ %
}\\ 	
}]] 
}^^ º
HC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Models\InClauseProperties.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
public		 

class		 
InClauseProperties		 #
{

 
public 
InClauseProperties !
(! "
)" #
{ 	

Parameters 
= 
new 
List !
<! "
IDbDataParameter" 2
>2 3
(3 4
)4 5
;5 6
} 	
public 
string 
Query 
{ 
get !
;! "
set# &
;& '
}( )
public 
IEnumerable 
< 
IDbDataParameter +
>+ ,

Parameters- 7
{8 9
get: =
;= >
set? B
;B C
}D E
} 
} Ÿ
FC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Models\InsertProperties.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
internal		 
class		 
InsertProperties		 #
{

 
public 
InsertProperties 
(  
)  !
{" #

Parameters$ .
=/ 0
new1 4
List5 9
<9 :
IDbDataParameter: J
>J K
(K L
)L M
;M N
}O P
public 
string 
ColumnsClause #
{$ %
get& )
;) *
set+ .
;. /
}0 1
public 
string 
ValuesClause "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 
List 
< 
IDbDataParameter $
>$ %

Parameters& 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
} 
} ¡
?C:\Projects\SqlServerAdoNet\SqlServerAdoNet\Models\TableName.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
public 

class 
	TableName 
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Schema 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} µ
FC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Models\UpdateProperties.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
internal

 
class

 
UpdateProperties

 #
{ 
public 
UpdateProperties 
(  
)  !
{" #

Parameters$ .
=/ 0
new1 4
List5 9
<9 :
IDbDataParameter: J
>J K
(K L
)L M
;M N
}O P
public 
string 
	SetClause 
{  !
get" %
;% &
set' *
;* +
}, -
public 
List 
< 
IDbDataParameter $
>$ %

Parameters& 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
} 
} ∏
EC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Models\WhereProperties.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
internal

 
class

 
WhereProperties

 "
{ 
public 
WhereProperties 
( 
)  
{! "

Parameters# -
=. /
new0 3
List4 8
<8 9
IDbDataParameter9 I
>I J
(J K
)K L
;L M
}N O
public 
string 
ConditionClause %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
List 
< 
IDbDataParameter $
>$ %

Parameters& 0
{1 2
get3 6
;6 7
set8 ;
;; <
}= >
} 
} ì
FC:\Projects\SqlServerAdoNet\SqlServerAdoNet\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str *
)* +
]+ ,
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str ,
), -
]- .
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *
[&& 
assembly&& 	
:&&	 

InternalsVisibleTo&& 
(&& 
$str&& C
)&&C D
]&&D E
['' 
assembly'' 	
:''	 

InternalsVisibleTo'' 
('' 
$str'' J
)''J K
]''K L’´
8C:\Projects\SqlServerAdoNet\SqlServerAdoNet\SqlRunner.cs
	namespace		 	
	StatKings		
 
.		 
SqlServerAdoNet		 #
{

 
public 

class 
	SqlRunner 
: 

ISqlRunner '
{ 
private 
readonly 
IUnitOfWork $
_unitOfWork% 0
;0 1
public 
	SqlRunner 
( 
IUnitOfWork $

unitOfWork% /
)/ 0
{ 	
if 
( 

unitOfWork 
== 
null "
)" #
{ 
throw 
new !
ArgumentNullException /
(/ 0
nameof0 6
(6 7

unitOfWork7 A
)A B
)B C
;C D
} 
_unitOfWork 
= 

unitOfWork $
;$ %
} 	
public## 
void## 
ExecuteNonQuery## #
(### $
CommandSettings##$ 3
commandSettings##4 C
)##C D
{$$ 	

IDbCommand%% 
cmd%% 
=%% 
CreateCommand%% *
(%%* +
commandSettings%%+ :
)%%: ;
;%%; <
try&& 
{'' 
cmd(( 
.(( 
ExecuteNonQuery(( #
(((# $
)(($ %
;((% &
SetOutputParameters)) #
())# $
cmd))$ '
,))' (
commandSettings))) 8
.))8 9

Parameters))9 C
)))C D
;))D E
}** 
catch++ 
(++ 
	Exception++ 
ex++ 
)++  
{,, 
throw-- 
HandleException-- %
(--% &
cmd--& )
,--) *
ex--+ -
)--- .
;--. /
}.. 
finally// 
{00 
if11 
(11 
cmd11 
!=11 
null11 
)11  
cmd11! $
.11$ %
Dispose11% ,
(11, -
)11- .
;11. /
}22 
}33 	
public:: 
object:: 
ExecuteScalar:: #
(::# $
CommandSettings::$ 3
commandSettings::4 C
)::C D
{;; 	

IDbCommand<< 
cmd<< 
=<< 
CreateCommand<< *
(<<* +
commandSettings<<+ :
)<<: ;
;<<; <
try== 
{>> 
var?? 
scalar?? 
=?? 
cmd??  
.??  !
ExecuteScalar??! .
(??. /
)??/ 0
;??0 1
SetOutputParameters@@ #
(@@# $
cmd@@$ '
,@@' (
commandSettings@@) 8
.@@8 9

Parameters@@9 C
)@@C D
;@@D E
returnAA 
scalarAA 
;AA 
}BB 
catchCC 
(CC 
	ExceptionCC 
exCC 
)CC  
{DD 
throwEE 
HandleExceptionEE %
(EE% &
cmdEE& )
,EE) *
exEE+ -
)EE- .
;EE. /
}FF 
finallyGG 
{HH 
ifII 
(II 
cmdII 
!=II 
nullII 
)II  
cmdII! $
.II$ %
DisposeII% ,
(II, -
)II- .
;II. /
}JJ 
}KK 	
publicSS 
IEnumerableSS 
<SS 
TSS 
>SS 
ExecuteReaderSS +
<SS+ ,
TSS, -
>SS- .
(SS. /
CommandSettingsSS/ >
commandSettingsSS? N
)SSN O
{TT 	

IDbCommandUU 
cmdUU 
=UU 
CreateCommandUU *
(UU* +
commandSettingsUU+ :
)UU: ;
;UU; <
tryVV 
{WW 
IEnumerableXX 
<XX 
TXX 
>XX 
resultsXX &
;XX& '
usingYY 
(YY 
varYY 
readerYY !
=YY" #
cmdYY$ '
.YY' (
ExecuteReaderYY( 5
(YY5 6
)YY6 7
)YY7 8
{ZZ 
results[[ 
=[[ 
	MapToList[[ '
<[[' (
T[[( )
>[[) *
([[* +
reader[[+ 1
)[[1 2
;[[2 3
}\\ 
SetOutputParameters]] #
(]]# $
cmd]]$ '
,]]' (
commandSettings]]) 8
.]]8 9

Parameters]]9 C
)]]C D
;]]D E
return^^ 
results^^ 
;^^ 
}__ 
catch`` 
(`` 
	Exception`` 
ex`` 
)``  
{aa 
throwbb 
HandleExceptionbb %
(bb% &
cmdbb& )
,bb) *
exbb+ -
)bb- .
;bb. /
}cc 
finallydd 
{ee 
ifff 
(ff 
cmdff 
!=ff 
nullff 
)ff  
cmdff! $
.ff$ %
Disposeff% ,
(ff, -
)ff- .
;ff. /
}gg 
}hh 	
publicpp 
Tpp 
ExecuteReaderFirstpp #
<pp# $
Tpp$ %
>pp% &
(pp& '
CommandSettingspp' 6
commandSettingspp7 F
)ppF G
{qq 	
returnrr 
ExecuteReaderrr  
<rr  !
Trr! "
>rr" #
(rr# $
commandSettingsrr$ 3
)rr3 4
.rr4 5
FirstOrDefaultrr5 C
(rrC D
)rrD E
;rrE F
}ss 	
public{{ 
T{{ 
Get{{ 
<{{ 
T{{ 
>{{ 
({{ 
params{{ 
object{{ %
[{{% &
]{{& '
primaryKeyValues{{( 8
){{8 9
{|| 	
var}} 
builder}} 
=}} 
new}} 
QueryBuilder}} *
<}}* +
T}}+ ,
>}}, -
(}}- .
	QueryType}}. 7
.}}7 8
Select}}8 >
)}}> ?
;}}? @
builder~~ 
.~~ 
SetPrimaryKeyValues~~ '
(~~' (
primaryKeyValues~~( 8
)~~8 9
;~~9 :
return 
ExecuteReaderFirst %
<% &
T& '
>' (
(( )
builder) 0
.0 1
MakeCommandSettings1 D
(D E
)E F
)F G
;G H
}
ÄÄ 	
public
áá 
IEnumerable
áá 
<
áá 
T
áá 
>
áá 
GetAll
áá $
<
áá$ %
T
áá% &
>
áá& '
(
áá' (
)
áá( )
{
àà 	
var
ââ 
builder
ââ 
=
ââ 
new
ââ 
QueryBuilder
ââ *
<
ââ* +
T
ââ+ ,
>
ââ, -
(
ââ- .
	QueryType
ââ. 7
.
ââ7 8
Select
ââ8 >
)
ââ> ?
;
ââ? @
return
ää 
ExecuteReader
ää  
<
ää  !
T
ää! "
>
ää" #
(
ää# $
builder
ää$ +
.
ää+ ,!
MakeCommandSettings
ää, ?
(
ää? @
)
ää@ A
)
ääA B
;
ääB C
}
ãã 	
public
íí 
void
íí 
Delete
íí 
<
íí 
T
íí 
>
íí 
(
íí 
params
íí $
object
íí% +
[
íí+ ,
]
íí, -
primaryKeyValues
íí. >
)
íí> ?
{
ìì 	
var
îî 
builder
îî 
=
îî 
new
îî 
QueryBuilder
îî *
<
îî* +
T
îî+ ,
>
îî, -
(
îî- .
	QueryType
îî. 7
.
îî7 8
Delete
îî8 >
)
îî> ?
;
îî? @
builder
ïï 
.
ïï !
SetPrimaryKeyValues
ïï '
(
ïï' (
primaryKeyValues
ïï( 8
)
ïï8 9
;
ïï9 :
ExecuteNonQuery
ññ 
(
ññ 
builder
ññ #
.
ññ# $!
MakeCommandSettings
ññ$ 7
(
ññ7 8
)
ññ8 9
)
ññ9 :
;
ññ: ;
}
óó 	
public
üü 
int
üü 
InsertForId
üü 
<
üü 
T
üü  
>
üü  !
(
üü! "
T
üü" #
entity
üü$ *
)
üü* +
{
†† 	
var
°° 
builder
°° 
=
°° 
new
°° 
QueryBuilder
°° *
<
°°* +
T
°°+ ,
>
°°, -
(
°°- .
	QueryType
°°. 7
.
°°7 8
Insert
°°8 >
)
°°> ?
;
°°? @
builder
¢¢ 
.
¢¢ 
SetEntityInstance
¢¢ %
(
¢¢% &
entity
¢¢& ,
)
¢¢, -
;
¢¢- .
var
££ 
scalar
££ 
=
££ 
ExecuteScalar
££ &
(
££& '
builder
££' .
.
££. /!
MakeCommandSettings
££/ B
(
££B C
)
££C D
)
££D E
;
££E F
return
§§ 
Convert
§§ 
.
§§ 
ToInt32
§§ "
(
§§" #
scalar
§§# )
)
§§) *
;
§§* +
}
•• 	
public
¨¨ 
void
¨¨ 
Insert
¨¨ 
<
¨¨ 
T
¨¨ 
>
¨¨ 
(
¨¨ 
T
¨¨ 
entity
¨¨  &
)
¨¨& '
{
≠≠ 	
var
ÆÆ 
builder
ÆÆ 
=
ÆÆ 
new
ÆÆ 
QueryBuilder
ÆÆ *
<
ÆÆ* +
T
ÆÆ+ ,
>
ÆÆ, -
(
ÆÆ- .
	QueryType
ÆÆ. 7
.
ÆÆ7 8
Insert
ÆÆ8 >
)
ÆÆ> ?
;
ÆÆ? @
builder
ØØ 
.
ØØ 
SetEntityInstance
ØØ %
(
ØØ% &
entity
ØØ& ,
)
ØØ, -
;
ØØ- .
ExecuteNonQuery
∞∞ 
(
∞∞ 
builder
∞∞ #
.
∞∞# $!
MakeCommandSettings
∞∞$ 7
(
∞∞7 8
)
∞∞8 9
)
∞∞9 :
;
∞∞: ;
}
±± 	
public
∏∏ 
void
∏∏ 
Update
∏∏ 
<
∏∏ 
T
∏∏ 
>
∏∏ 
(
∏∏ 
T
∏∏ 
entity
∏∏  &
)
∏∏& '
{
ππ 	
var
∫∫ 
builder
∫∫ 
=
∫∫ 
new
∫∫ 
QueryBuilder
∫∫ *
<
∫∫* +
T
∫∫+ ,
>
∫∫, -
(
∫∫- .
	QueryType
∫∫. 7
.
∫∫7 8
Update
∫∫8 >
)
∫∫> ?
;
∫∫? @
builder
ªª 
.
ªª 
SetEntityInstance
ªª %
(
ªª% &
entity
ªª& ,
)
ªª, -
;
ªª- .
ExecuteNonQuery
ºº 
(
ºº 
builder
ºº #
.
ºº# $!
MakeCommandSettings
ºº$ 7
(
ºº7 8
)
ºº8 9
)
ºº9 :
;
ºº: ;
}
ΩΩ 	
private
ƒƒ 

IDbCommand
ƒƒ 
CreateCommand
ƒƒ (
(
ƒƒ( )
CommandSettings
ƒƒ) 8
commandSettings
ƒƒ9 H
)
ƒƒH I
{
≈≈ 	
if
«« 
(
«« 
commandSettings
«« 
==
««  "
null
««# '
)
««' (
{
»» 
throw
…… 
new
…… #
ArgumentNullException
…… /
(
……/ 0
nameof
……0 6
(
……6 7
commandSettings
……7 F
)
……F G
)
……G H
;
……H I
}
   
var
ÕÕ 
cmd
ÕÕ 
=
ÕÕ 
_unitOfWork
ÕÕ !
.
ÕÕ! "
CreateCommand
ÕÕ" /
(
ÕÕ/ 0
)
ÕÕ0 1
;
ÕÕ1 2
cmd
ŒŒ 
.
ŒŒ 
CommandType
ŒŒ 
=
ŒŒ 
commandSettings
ŒŒ -
.
ŒŒ- .
CommandType
ŒŒ. 9
;
ŒŒ9 :
cmd
œœ 
.
œœ 
CommandText
œœ 
=
œœ 
commandSettings
œœ -
.
œœ- .
CommandText
œœ. 9
;
œœ9 :
foreach
““ 
(
““ 
var
““ 
prm
““ 
in
““ 
commandSettings
““  /
.
““/ 0

Parameters
““0 :
)
““: ;
{
”” 
cmd
‘‘ 
.
‘‘ 

Parameters
‘‘ 
.
‘‘ 
Add
‘‘ "
(
‘‘" #
prm
‘‘# &
)
‘‘& '
;
‘‘' (
}
’’ 
return
◊◊ 
cmd
◊◊ 
;
◊◊ 
}
ÿÿ 	
private
‡‡ 
DataException
‡‡ 
HandleException
‡‡ -
(
‡‡- .

IDbCommand
‡‡. 8
command
‡‡9 @
,
‡‡@ A
	Exception
‡‡B K
	exception
‡‡L U
)
‡‡U V
{
·· 	
var
‚‚ 
msg
‚‚ 
=
‚‚ 
new
‚‚ 
StringBuilder
‚‚ '
(
‚‚' (
)
‚‚( )
;
‚‚) *
msg
„„ 
.
„„ 

AppendLine
„„ 
(
„„ 
$str
„„ 7
)
„„7 8
;
„„8 9
msg
‰‰ 
.
‰‰ 

AppendLine
‰‰ 
(
‰‰ 
	exception
‰‰ $
.
‰‰$ %
ToString
‰‰% -
(
‰‰- .
)
‰‰. /
)
‰‰/ 0
;
‰‰0 1
msg
ÂÂ 
.
ÂÂ 

AppendLine
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
msg
ÊÊ 
.
ÊÊ 

AppendLine
ÊÊ 
(
ÊÊ 
$str
ÊÊ 0
)
ÊÊ0 1
;
ÊÊ1 2
msg
ÁÁ 
.
ÁÁ 

AppendLine
ÁÁ 
(
ÁÁ 
	exception
ÁÁ $
.
ÁÁ$ %
Message
ÁÁ% ,
)
ÁÁ, -
;
ÁÁ- .
msg
ËË 
.
ËË 

AppendLine
ËË 
(
ËË 
)
ËË 
;
ËË 
msg
ÈÈ 
.
ÈÈ 

AppendLine
ÈÈ 
(
ÈÈ 
$str
ÈÈ 4
)
ÈÈ4 5
;
ÈÈ5 6
msg
ÍÍ 
.
ÍÍ 

AppendLine
ÍÍ 
(
ÍÍ 
	exception
ÍÍ $
.
ÍÍ$ %

StackTrace
ÍÍ% /
)
ÍÍ/ 0
;
ÍÍ0 1
msg
ÎÎ 
.
ÎÎ 

AppendLine
ÎÎ 
(
ÎÎ 
)
ÎÎ 
;
ÎÎ 
var
ÌÌ 
inner
ÌÌ 
=
ÌÌ 
	exception
ÌÌ !
.
ÌÌ! "
InnerException
ÌÌ" 0
;
ÌÌ0 1
while
ÓÓ 
(
ÓÓ 
inner
ÓÓ 
!=
ÓÓ 
null
ÓÓ  
)
ÓÓ  !
{
ÔÔ 
msg
 
.
 

AppendLine
 
(
 
$str
 <
)
< =
;
= >
msg
ÒÒ 
.
ÒÒ 

AppendLine
ÒÒ 
(
ÒÒ 
inner
ÒÒ $
.
ÒÒ$ %
Message
ÒÒ% ,
)
ÒÒ, -
;
ÒÒ- .
msg
ÚÚ 
.
ÚÚ 

AppendLine
ÚÚ 
(
ÚÚ 
)
ÚÚ  
;
ÚÚ  !
inner
ÛÛ 
=
ÛÛ 
inner
ÛÛ 
.
ÛÛ 
InnerException
ÛÛ ,
;
ÛÛ, -
}
ÙÙ 
if
ˆˆ 
(
ˆˆ 
command
ˆˆ 
!=
ˆˆ 
null
ˆˆ 
&&
ˆˆ  "
!
ˆˆ# $
string
ˆˆ$ *
.
ˆˆ* + 
IsNullOrWhiteSpace
ˆˆ+ =
(
ˆˆ= >
command
ˆˆ> E
.
ˆˆE F
CommandText
ˆˆF Q
)
ˆˆQ R
)
ˆˆR S
{
˜˜ 
msg
¯¯ 
.
¯¯ 

AppendLine
¯¯ 
(
¯¯ 
$str
¯¯ 2
)
¯¯2 3
;
¯¯3 4
msg
˘˘ 
.
˘˘ 

AppendLine
˘˘ 
(
˘˘ 
command
˘˘ &
.
˘˘& '
CommandText
˘˘' 2
)
˘˘2 3
;
˘˘3 4
msg
˙˙ 
.
˙˙ 

AppendLine
˙˙ 
(
˙˙ 
)
˙˙  
;
˙˙  !
msg
˚˚ 
.
˚˚ 

AppendLine
˚˚ 
(
˚˚ 
$str
˚˚ 7
)
˚˚7 8
;
˚˚8 9
foreach
¸¸ 
(
¸¸ 
IDataParameter
¸¸ '
	parameter
¸¸( 1
in
¸¸2 4
command
¸¸5 <
.
¸¸< =

Parameters
¸¸= G
)
¸¸G H
{
˝˝ 
msg
˛˛ 
.
˛˛ 
AppendFormat
˛˛ $
(
˛˛$ %
$str
˛˛% /
,
˛˛/ 0
	parameter
˛˛1 :
.
˛˛: ;
ParameterName
˛˛; H
,
˛˛H I
	parameter
˛˛J S
.
˛˛S T
Value
˛˛T Y
)
˛˛Y Z
;
˛˛Z [
msg
ˇˇ 
.
ˇˇ 

AppendLine
ˇˇ "
(
ˇˇ" #
)
ˇˇ# $
;
ˇˇ$ %
}
ÄÄ 
}
ÅÅ 
var
ÑÑ 
de
ÑÑ 
=
ÑÑ 
new
ÑÑ 
DataException
ÑÑ &
(
ÑÑ& '
	exception
ÑÑ' 0
.
ÑÑ0 1
Message
ÑÑ1 8
)
ÑÑ8 9
;
ÑÑ9 :
de
ÖÖ 
.
ÖÖ 
Data
ÖÖ 
.
ÖÖ 
Add
ÖÖ 
(
ÖÖ 
$str
ÖÖ  
,
ÖÖ  !
msg
ÖÖ" %
.
ÖÖ% &
ToString
ÖÖ& .
(
ÖÖ. /
)
ÖÖ/ 0
)
ÖÖ0 1
;
ÖÖ1 2
return
ÜÜ 
de
ÜÜ 
;
ÜÜ 
}
áá 	
private
èè 
IEnumerable
èè 
<
èè 
T
èè 
>
èè 
	MapToList
èè (
<
èè( )
T
èè) *
>
èè* +
(
èè+ ,
IDataReader
èè, 7
reader
èè8 >
)
èè> ?
{
êê 	
var
íí 
items
íí 
=
íí 
new
íí 
List
íí  
<
íí  !
T
íí! "
>
íí" #
(
íí# $
)
íí$ %
;
íí% &
while
ìì 
(
ìì 
reader
ìì 
.
ìì 
Read
ìì 
(
ìì 
)
ìì  
)
ìì  !
{
îî 
items
ïï 
.
ïï 
Add
ïï 
(
ïï 
Map
ïï 
<
ïï 
T
ïï 
>
ïï  
(
ïï  !
reader
ïï! '
)
ïï' (
)
ïï( )
;
ïï) *
}
ññ 
return
óó 
items
óó 
;
óó 
}
òò 	
private
†† 
T
†† 
Map
†† 
<
†† 
T
†† 
>
†† 
(
†† 
IDataRecord
†† $
record
††% +
)
††+ ,
{
°° 	
var
¢¢ 
entity
¢¢ 
=
¢¢ 
	Activator
¢¢ "
.
¢¢" #
CreateInstance
¢¢# 1
<
¢¢1 2
T
¢¢2 3
>
¢¢3 4
(
¢¢4 5
)
¢¢5 6
;
¢¢6 7
var
££ 
propColNames
££ 
=
££ 
ReflectionHelper
££ /
.
££/ 0$
GetPropertyColumnNames
££0 F
<
££F G
T
££G H
>
££H I
(
££I J
)
££J K
;
££K L
for
¶¶ 
(
¶¶ 
var
¶¶ 
i
¶¶ 
=
¶¶ 
$num
¶¶ 
;
¶¶ 
i
¶¶ 
<
¶¶ 
record
¶¶  &
.
¶¶& '

FieldCount
¶¶' 1
;
¶¶1 2
i
¶¶3 4
++
¶¶4 6
)
¶¶6 7
{
ßß 
var
®® 

recordName
®® 
=
®®  
record
®®! '
.
®®' (
GetName
®®( /
(
®®/ 0
i
®®0 1
)
®®1 2
;
®®2 3
var
©© 
name
©© 
=
©© 
propColNames
©© '
.
©©' (
First
©©( -
(
©©- .
x
©©. /
=>
©©0 2
x
©©3 4
.
©©4 5
Value
©©5 :
==
©©; =

recordName
©©> H
)
©©H I
.
©©I J
Key
©©J M
;
©©M N
var
¨¨ 
prop
¨¨ 
=
¨¨ 
ReflectionHelper
¨¨ +
.
¨¨+ ,
GetProperty
¨¨, 7
<
¨¨7 8
T
¨¨8 9
>
¨¨9 :
(
¨¨: ;
name
¨¨; ?
)
¨¨? @
;
¨¨@ A
if
≠≠ 
(
≠≠ 
prop
≠≠ 
==
≠≠ 
null
≠≠  
)
≠≠  !
continue
≠≠" *
;
≠≠* +
var
∞∞ 
value
∞∞ 
=
∞∞ 
record
∞∞ "
.
∞∞" #
GetValue
∞∞# +
(
∞∞+ ,
i
∞∞, -
)
∞∞- .
;
∞∞. /
if
±± 
(
±± 
value
±± 
==
±± 
DBNull
±± #
.
±±# $
Value
±±$ )
)
±±) *
continue
±±+ 3
;
±±3 4
prop
¥¥ 
.
¥¥ 
SetValue
¥¥ 
(
¥¥ 
entity
¥¥ $
,
¥¥$ %
value
¥¥& +
)
¥¥+ ,
;
¥¥, -
}
µµ 
return
∑∑ 
entity
∑∑ 
;
∑∑ 
}
∏∏ 	
private
øø 
void
øø !
SetOutputParameters
øø (
(
øø( )

IDbCommand
øø) 3
command
øø4 ;
,
øø; <
IEnumerable
øø= H
<
øøH I
IDbDataParameter
øøI Y
>
øøY Z

parameters
øø[ e
)
øøe f
{
¿¿ 	
if
¡¡ 
(
¡¡ 

parameters
¡¡ 
!=
¡¡ 
null
¡¡ "
)
¡¡" #
{
¬¬ 
foreach
√√ 
(
√√ 
var
√√ 
prm
√√  
in
√√! #

parameters
√√$ .
)
√√. /
{
ƒƒ 
if
≈≈ 
(
≈≈ 
prm
≈≈ 
.
≈≈ 
	Direction
≈≈ %
!=
≈≈& ( 
ParameterDirection
≈≈) ;
.
≈≈; <
Input
≈≈< A
)
≈≈A B
{
∆∆ 
prm
«« 
.
«« 
Value
«« !
=
««" #
(
««$ %
(
««% &
SqlParameter
««& 2
)
««2 3
command
««3 :
.
««: ;

Parameters
««; E
[
««E F
prm
««F I
.
««I J
ParameterName
««J W
]
««W X
)
««X Y
.
««Y Z
Value
««Z _
;
««_ `
}
»» 
}
…… 
}
   
}
ÀÀ 	
}
ÃÃ 
}ÕÕ Ü4
9C:\Projects\SqlServerAdoNet\SqlServerAdoNet\UnitOfWork.cs
	namespace 	
	StatKings
 
. 
SqlServerAdoNet #
{ 
public 

sealed 
class 

UnitOfWork "
:# $
IUnitOfWork% 0
{ 
public 
static 
IUnitOfWork !
Create" (
(( )
string) /
connectionString0 @
)@ A
{ 	
if 
( 
string 
. 
IsNullOrWhiteSpace )
() *
connectionString* :
): ;
); <
{ 
throw 
new 
ArgumentException +
(+ ,
$str, N
,N O
nameofP V
(V W
connectionStringW g
)g h
)h i
;i j
} 
var 
provider 
= 
DbProviderFactories .
.. /

GetFactory/ 9
(9 :
$str: Q
)Q R
;R S
var 

connection 
= 
provider %
.% &
CreateConnection& 6
(6 7
)7 8
;8 9
try 
{ 

connection 
. 
ConnectionString +
=, -
connectionString. >
;> ?

connection 
. 
Open 
(  
)  !
;! "
} 
catch 
( 
	Exception 
ex 
)  
{ 
var   
message   
=   
$str   m
;  m n
throw!! 
new!! 
DataException!! '
(!!' (
string!!( .
.!!. /
Format!!/ 5
(!!5 6
message!!6 =
,!!= >
connectionString!!? O
)!!O P
,!!P Q
ex!!R T
)!!T U
;!!U V
}"" 
return$$ 
new$$ 

UnitOfWork$$ !
($$! "

connection$$" ,
)$$, -
;$$- .
}%% 	
private'' 
IDbConnection'' 
_connection'' )
;'') *
private(( 
IDbTransaction(( 
_transaction(( +
;((+ ,
private-- 

UnitOfWork-- 
(-- 
IDbConnection-- (

connection--) 3
)--3 4
{.. 	
_connection// 
=// 

connection// $
;//$ %
}00 	
public66 

IDbCommand66 
CreateCommand66 '
(66' (
)66( )
{77 	
var88 
cmd88 
=88 
_connection88 !
.88! "
CreateCommand88" /
(88/ 0
)880 1
;881 2
cmd99 
.99 
Transaction99 
=99 
_transaction99 *
;99* +
return:: 
cmd:: 
;:: 
};; 	
public@@ 
void@@ 
BeginTransaction@@ $
(@@$ %
)@@% &
{AA 	
ifBB 
(BB 
_transactionBB 
!=BB 
nullBB  $
)BB$ %
{CC 
throwDD 
newDD %
InvalidOperationExceptionDD 3
(DD3 4
$strDD4 ]
)DD] ^
;DD^ _
}EE 
tryGG 
{HH 
_transactionII 
=II 
_connectionII *
.II* +
BeginTransactionII+ ;
(II; <
)II< =
;II= >
}JJ 
catchKK 
(KK 
	ExceptionKK 
exKK 
)KK  
{LL 
throwMM 
newMM %
InvalidOperationExceptionMM 3
(MM3 4
$str	MM4 Ä
,
MMÄ Å
ex
MMÇ Ñ
)
MMÑ Ö
;
MMÖ Ü
}NN 
}OO 	
publicTT 
voidTT 
CommitTT 
(TT 
)TT 
{UU 	
ifVV 
(VV 
_transactionVV 
==VV 
nullVV  $
)VV$ %
{WW 
throwXX 
newXX %
InvalidOperationExceptionXX 3
(XX3 4
$str	XX4 É
)
XXÉ Ñ
;
XXÑ Ö
}YY 
try[[ 
{\\ 
_transaction]] 
.]] 
Commit]] #
(]]# $
)]]$ %
;]]% &
}^^ 
catch__ 
(__ 
	Exception__ 
ex__ 
)__  
{`` 
throwaa 
newaa %
InvalidOperationExceptionaa 3
(aa3 4
$str	aa4 ™
,
aa™ ´
ex
aa¨ Æ
)
aaÆ Ø
;
aaØ ∞
}bb 
_transactiondd 
=dd 
nulldd 
;dd  
}ee 	
publicjj 
voidjj 
Rollbackjj 
(jj 
)jj 
{kk 	
ifll 
(ll 
_transactionll 
==ll 
nullll  $
)ll$ %
{mm 
thrownn 
newnn %
InvalidOperationExceptionnn 3
(nn3 4
$str	nn4 É
)
nnÉ Ñ
;
nnÑ Ö
}oo 
tryqq 
{rr 
_transactionss 
.ss 
Rollbackss %
(ss% &
)ss& '
;ss' (
}tt 
catchuu 
(uu 
	Exceptionuu 
exuu 
)uu  
{vv 
throwww 
newww %
InvalidOperationExceptionww 3
(ww3 4
$str	ww4 ¨
,
ww¨ ≠
ex
wwÆ ∞
)
ww∞ ±
;
ww± ≤
}xx 
_transactionzz 
=zz 
nullzz 
;zz  
}{{ 	
public
ÄÄ 
void
ÄÄ 
Dispose
ÄÄ 
(
ÄÄ 
)
ÄÄ 
{
ÅÅ 	
if
ÇÇ 
(
ÇÇ 
_transaction
ÇÇ 
!=
ÇÇ 
null
ÇÇ  $
)
ÇÇ$ %
{
ÉÉ 
_transaction
ÖÖ 
.
ÖÖ 
Rollback
ÖÖ %
(
ÖÖ% &
)
ÖÖ& '
;
ÖÖ' (
_transaction
ÜÜ 
=
ÜÜ 
null
ÜÜ #
;
ÜÜ# $
}
áá 
if
ââ 
(
ââ 
_connection
ââ 
!=
ââ 
null
ââ #
)
ââ# $
{
ää 
_connection
ãã 
.
ãã 
Close
ãã !
(
ãã! "
)
ãã" #
;
ãã# $
_connection
åå 
=
åå 
null
åå "
;
åå" #
}
çç 
}
éé 	
}
èè 
}êê 